https://stackoverflow.com/questions/2321511/what-is-meant-by-resource-acquisition-is-initialization-raii

106

This is a programming idiom which briefly means that you

encapsulate a resource into a class (whose constructor usually - but not necessarily** - 
acquires the resource, and its destructor always releases it)
use the resource via a local instance of the class*
the resource is automatically freed when the object gets out of scope
This guarantees that whatever happens while the resource is in use, it will eventually get freed
(whether due to normal return, destruction of the containing object, or an exception thrown).

It is a widely used good practice in C++, because apart from being a safe way to deal with 
resources, it also makes your code much cleaner as you don't need to mix error handling code 
with the main functionality.

* Update: "local" may mean a local variable, or a nonstatic member variable of a class. 
In the latter case the member variable is initialized and destroyed with its owner object.

** Update2: as @sbi pointed out, the resource - although often is allocated inside the 
constructor - may also be allocated outside and passed in as a parameter.	